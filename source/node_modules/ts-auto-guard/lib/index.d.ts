import { Project } from 'ts-morph';
export declare function assertNever<T>(_: never): T;
export interface IProcessOptions {
    exportAll?: boolean;
    importGuards?: string;
    importExtension?: string;
    preventExportImported?: boolean;
    shortCircuitCondition?: string;
    debug?: boolean;
    guardFileName?: string;
}
export interface IGenerateOptions {
    paths?: ReadonlyArray<string>;
    project: string;
    processOptions: Readonly<IProcessOptions>;
}
export declare function generate({ paths, project: tsConfigFilePath, processOptions, }: Readonly<IGenerateOptions>): Promise<void>;
export declare function processProject(project: Project, options?: Readonly<IProcessOptions>): void;
