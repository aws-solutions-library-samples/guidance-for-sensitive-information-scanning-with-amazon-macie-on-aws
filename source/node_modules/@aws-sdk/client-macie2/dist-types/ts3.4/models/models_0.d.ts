import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { Macie2ServiceException as __BaseException } from "./Macie2ServiceException";
export declare const AdminStatus: {
  readonly DISABLING_IN_PROGRESS: "DISABLING_IN_PROGRESS";
  readonly ENABLED: "ENABLED";
};
export type AdminStatus = (typeof AdminStatus)[keyof typeof AdminStatus];
export interface AdminAccount {
  accountId?: string | undefined;
  status?: AdminStatus | undefined;
}
export interface AllowListSummary {
  arn?: string | undefined;
  createdAt?: Date | undefined;
  description?: string | undefined;
  id?: string | undefined;
  name?: string | undefined;
  updatedAt?: Date | undefined;
}
export declare const AutomatedDiscoveryAccountStatus: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type AutomatedDiscoveryAccountStatus =
  (typeof AutomatedDiscoveryAccountStatus)[keyof typeof AutomatedDiscoveryAccountStatus];
export interface AutomatedDiscoveryAccount {
  accountId?: string | undefined;
  status?: AutomatedDiscoveryAccountStatus | undefined;
}
export interface AutomatedDiscoveryAccountUpdate {
  accountId?: string | undefined;
  status?: AutomatedDiscoveryAccountStatus | undefined;
}
export declare const AutomatedDiscoveryAccountUpdateErrorCode: {
  readonly ACCOUNT_NOT_FOUND: "ACCOUNT_NOT_FOUND";
  readonly ACCOUNT_PAUSED: "ACCOUNT_PAUSED";
};
export type AutomatedDiscoveryAccountUpdateErrorCode =
  (typeof AutomatedDiscoveryAccountUpdateErrorCode)[keyof typeof AutomatedDiscoveryAccountUpdateErrorCode];
export interface AutomatedDiscoveryAccountUpdateError {
  accountId?: string | undefined;
  errorCode?: AutomatedDiscoveryAccountUpdateErrorCode | undefined;
}
export interface BatchGetCustomDataIdentifierSummary {
  arn?: string | undefined;
  createdAt?: Date | undefined;
  deleted?: boolean | undefined;
  description?: string | undefined;
  id?: string | undefined;
  name?: string | undefined;
}
export declare const AllowsUnencryptedObjectUploads: {
  readonly FALSE: "FALSE";
  readonly TRUE: "TRUE";
  readonly UNKNOWN: "UNKNOWN";
};
export type AllowsUnencryptedObjectUploads =
  (typeof AllowsUnencryptedObjectUploads)[keyof typeof AllowsUnencryptedObjectUploads];
export declare const AutomatedDiscoveryMonitoringStatus: {
  readonly MONITORED: "MONITORED";
  readonly NOT_MONITORED: "NOT_MONITORED";
};
export type AutomatedDiscoveryMonitoringStatus =
  (typeof AutomatedDiscoveryMonitoringStatus)[keyof typeof AutomatedDiscoveryMonitoringStatus];
export declare const BucketMetadataErrorCode: {
  readonly ACCESS_DENIED: "ACCESS_DENIED";
  readonly BUCKET_COUNT_EXCEEDS_QUOTA: "BUCKET_COUNT_EXCEEDS_QUOTA";
};
export type BucketMetadataErrorCode =
  (typeof BucketMetadataErrorCode)[keyof typeof BucketMetadataErrorCode];
export declare const IsDefinedInJob: {
  readonly FALSE: "FALSE";
  readonly TRUE: "TRUE";
  readonly UNKNOWN: "UNKNOWN";
};
export type IsDefinedInJob =
  (typeof IsDefinedInJob)[keyof typeof IsDefinedInJob];
export declare const IsMonitoredByJob: {
  readonly FALSE: "FALSE";
  readonly TRUE: "TRUE";
  readonly UNKNOWN: "UNKNOWN";
};
export type IsMonitoredByJob =
  (typeof IsMonitoredByJob)[keyof typeof IsMonitoredByJob];
export interface JobDetails {
  isDefinedInJob?: IsDefinedInJob | undefined;
  isMonitoredByJob?: IsMonitoredByJob | undefined;
  lastJobId?: string | undefined;
  lastJobRunTime?: Date | undefined;
}
export interface ObjectCountByEncryptionType {
  customerManaged?: number | undefined;
  kmsManaged?: number | undefined;
  s3Managed?: number | undefined;
  unencrypted?: number | undefined;
  unknown?: number | undefined;
}
export declare const EffectivePermission: {
  readonly NOT_PUBLIC: "NOT_PUBLIC";
  readonly PUBLIC: "PUBLIC";
  readonly UNKNOWN: "UNKNOWN";
};
export type EffectivePermission =
  (typeof EffectivePermission)[keyof typeof EffectivePermission];
export interface BlockPublicAccess {
  blockPublicAcls?: boolean | undefined;
  blockPublicPolicy?: boolean | undefined;
  ignorePublicAcls?: boolean | undefined;
  restrictPublicBuckets?: boolean | undefined;
}
export interface AccountLevelPermissions {
  blockPublicAccess?: BlockPublicAccess | undefined;
}
export interface AccessControlList {
  allowsPublicReadAccess?: boolean | undefined;
  allowsPublicWriteAccess?: boolean | undefined;
}
export interface BucketPolicy {
  allowsPublicReadAccess?: boolean | undefined;
  allowsPublicWriteAccess?: boolean | undefined;
}
export interface BucketLevelPermissions {
  accessControlList?: AccessControlList | undefined;
  blockPublicAccess?: BlockPublicAccess | undefined;
  bucketPolicy?: BucketPolicy | undefined;
}
export interface BucketPermissionConfiguration {
  accountLevelPermissions?: AccountLevelPermissions | undefined;
  bucketLevelPermissions?: BucketLevelPermissions | undefined;
}
export interface BucketPublicAccess {
  effectivePermission?: EffectivePermission | undefined;
  permissionConfiguration?: BucketPermissionConfiguration | undefined;
}
export interface ReplicationDetails {
  replicated?: boolean | undefined;
  replicatedExternally?: boolean | undefined;
  replicationAccounts?: string[] | undefined;
}
export declare const Type: {
  readonly AES256: "AES256";
  readonly NONE: "NONE";
  readonly aws_kms: "aws:kms";
  readonly aws_kms_dsse: "aws:kms:dsse";
};
export type Type = (typeof Type)[keyof typeof Type];
export interface BucketServerSideEncryption {
  kmsMasterKeyId?: string | undefined;
  type?: Type | undefined;
}
export declare const SharedAccess: {
  readonly EXTERNAL: "EXTERNAL";
  readonly INTERNAL: "INTERNAL";
  readonly NOT_SHARED: "NOT_SHARED";
  readonly UNKNOWN: "UNKNOWN";
};
export type SharedAccess = (typeof SharedAccess)[keyof typeof SharedAccess];
export interface KeyValuePair {
  key?: string | undefined;
  value?: string | undefined;
}
export interface ObjectLevelStatistics {
  fileType?: number | undefined;
  storageClass?: number | undefined;
  total?: number | undefined;
}
export interface BucketMetadata {
  accountId?: string | undefined;
  allowsUnencryptedObjectUploads?: AllowsUnencryptedObjectUploads | undefined;
  automatedDiscoveryMonitoringStatus?:
    | AutomatedDiscoveryMonitoringStatus
    | undefined;
  bucketArn?: string | undefined;
  bucketCreatedAt?: Date | undefined;
  bucketName?: string | undefined;
  classifiableObjectCount?: number | undefined;
  classifiableSizeInBytes?: number | undefined;
  errorCode?: BucketMetadataErrorCode | undefined;
  errorMessage?: string | undefined;
  jobDetails?: JobDetails | undefined;
  lastAutomatedDiscoveryTime?: Date | undefined;
  lastUpdated?: Date | undefined;
  objectCount?: number | undefined;
  objectCountByEncryptionType?: ObjectCountByEncryptionType | undefined;
  publicAccess?: BucketPublicAccess | undefined;
  region?: string | undefined;
  replicationDetails?: ReplicationDetails | undefined;
  sensitivityScore?: number | undefined;
  serverSideEncryption?: BucketServerSideEncryption | undefined;
  sharedAccess?: SharedAccess | undefined;
  sizeInBytes?: number | undefined;
  sizeInBytesCompressed?: number | undefined;
  tags?: KeyValuePair[] | undefined;
  unclassifiableObjectCount?: ObjectLevelStatistics | undefined;
  unclassifiableObjectSizeInBytes?: ObjectLevelStatistics | undefined;
  versioning?: boolean | undefined;
}
export interface ClassificationScopeSummary {
  id?: string | undefined;
  name?: string | undefined;
}
export declare const JobComparator: {
  readonly CONTAINS: "CONTAINS";
  readonly EQ: "EQ";
  readonly GT: "GT";
  readonly GTE: "GTE";
  readonly LT: "LT";
  readonly LTE: "LTE";
  readonly NE: "NE";
  readonly STARTS_WITH: "STARTS_WITH";
};
export type JobComparator = (typeof JobComparator)[keyof typeof JobComparator];
export declare const SimpleCriterionKeyForJob: {
  readonly ACCOUNT_ID: "ACCOUNT_ID";
  readonly S3_BUCKET_EFFECTIVE_PERMISSION: "S3_BUCKET_EFFECTIVE_PERMISSION";
  readonly S3_BUCKET_NAME: "S3_BUCKET_NAME";
  readonly S3_BUCKET_SHARED_ACCESS: "S3_BUCKET_SHARED_ACCESS";
};
export type SimpleCriterionKeyForJob =
  (typeof SimpleCriterionKeyForJob)[keyof typeof SimpleCriterionKeyForJob];
export interface SimpleCriterionForJob {
  comparator?: JobComparator | undefined;
  key?: SimpleCriterionKeyForJob | undefined;
  values?: string[] | undefined;
}
export interface TagCriterionPairForJob {
  key?: string | undefined;
  value?: string | undefined;
}
export interface TagCriterionForJob {
  comparator?: JobComparator | undefined;
  tagValues?: TagCriterionPairForJob[] | undefined;
}
export interface CriteriaForJob {
  simpleCriterion?: SimpleCriterionForJob | undefined;
  tagCriterion?: TagCriterionForJob | undefined;
}
export interface CustomDataIdentifierSummary {
  arn?: string | undefined;
  createdAt?: Date | undefined;
  description?: string | undefined;
  id?: string | undefined;
  name?: string | undefined;
}
export interface DetectedDataDetails {
  value: string | undefined;
}
export declare const DataIdentifierType: {
  readonly CUSTOM: "CUSTOM";
  readonly MANAGED: "MANAGED";
};
export type DataIdentifierType =
  (typeof DataIdentifierType)[keyof typeof DataIdentifierType];
export interface Detection {
  arn?: string | undefined;
  count?: number | undefined;
  id?: string | undefined;
  name?: string | undefined;
  suppressed?: boolean | undefined;
  type?: DataIdentifierType | undefined;
}
export declare const FindingCategory: {
  readonly CLASSIFICATION: "CLASSIFICATION";
  readonly POLICY: "POLICY";
};
export type FindingCategory =
  (typeof FindingCategory)[keyof typeof FindingCategory];
export declare const OriginType: {
  readonly AUTOMATED_SENSITIVE_DATA_DISCOVERY: "AUTOMATED_SENSITIVE_DATA_DISCOVERY";
  readonly SENSITIVE_DATA_DISCOVERY_JOB: "SENSITIVE_DATA_DISCOVERY_JOB";
};
export type OriginType = (typeof OriginType)[keyof typeof OriginType];
export interface Cell {
  cellReference?: string | undefined;
  column?: number | undefined;
  columnName?: string | undefined;
  row?: number | undefined;
}
export interface Range {
  end?: number | undefined;
  start?: number | undefined;
  startColumn?: number | undefined;
}
export interface Page {
  lineRange?: Range | undefined;
  offsetRange?: Range | undefined;
  pageNumber?: number | undefined;
}
export interface _Record {
  jsonPath?: string | undefined;
  recordIndex?: number | undefined;
}
export interface Occurrences {
  cells?: Cell[] | undefined;
  lineRanges?: Range[] | undefined;
  offsetRanges?: Range[] | undefined;
  pages?: Page[] | undefined;
  records?: _Record[] | undefined;
}
export interface CustomDetection {
  arn?: string | undefined;
  count?: number | undefined;
  name?: string | undefined;
  occurrences?: Occurrences | undefined;
}
export interface CustomDataIdentifiers {
  detections?: CustomDetection[] | undefined;
  totalCount?: number | undefined;
}
export declare const SensitiveDataItemCategory: {
  readonly CREDENTIALS: "CREDENTIALS";
  readonly CUSTOM_IDENTIFIER: "CUSTOM_IDENTIFIER";
  readonly FINANCIAL_INFORMATION: "FINANCIAL_INFORMATION";
  readonly PERSONAL_INFORMATION: "PERSONAL_INFORMATION";
};
export type SensitiveDataItemCategory =
  (typeof SensitiveDataItemCategory)[keyof typeof SensitiveDataItemCategory];
export interface DefaultDetection {
  count?: number | undefined;
  occurrences?: Occurrences | undefined;
  type?: string | undefined;
}
export interface SensitiveDataItem {
  category?: SensitiveDataItemCategory | undefined;
  detections?: DefaultDetection[] | undefined;
  totalCount?: number | undefined;
}
export interface ClassificationResultStatus {
  code?: string | undefined;
  reason?: string | undefined;
}
export interface ClassificationResult {
  additionalOccurrences?: boolean | undefined;
  customDataIdentifiers?: CustomDataIdentifiers | undefined;
  mimeType?: string | undefined;
  sensitiveData?: SensitiveDataItem[] | undefined;
  sizeClassified?: number | undefined;
  status?: ClassificationResultStatus | undefined;
}
export interface ClassificationDetails {
  detailedResultsLocation?: string | undefined;
  jobArn?: string | undefined;
  jobId?: string | undefined;
  originType?: OriginType | undefined;
  result?: ClassificationResult | undefined;
}
export declare const FindingActionType: {
  readonly AWS_API_CALL: "AWS_API_CALL";
};
export type FindingActionType =
  (typeof FindingActionType)[keyof typeof FindingActionType];
export interface ApiCallDetails {
  api?: string | undefined;
  apiServiceName?: string | undefined;
  firstSeen?: Date | undefined;
  lastSeen?: Date | undefined;
}
export interface FindingAction {
  actionType?: FindingActionType | undefined;
  apiCallDetails?: ApiCallDetails | undefined;
}
export interface DomainDetails {
  domainName?: string | undefined;
}
export interface IpCity {
  name?: string | undefined;
}
export interface IpCountry {
  code?: string | undefined;
  name?: string | undefined;
}
export interface IpGeoLocation {
  lat?: number | undefined;
  lon?: number | undefined;
}
export interface IpOwner {
  asn?: string | undefined;
  asnOrg?: string | undefined;
  isp?: string | undefined;
  org?: string | undefined;
}
export interface IpAddressDetails {
  ipAddressV4?: string | undefined;
  ipCity?: IpCity | undefined;
  ipCountry?: IpCountry | undefined;
  ipGeoLocation?: IpGeoLocation | undefined;
  ipOwner?: IpOwner | undefined;
}
export interface SessionContextAttributes {
  creationDate?: Date | undefined;
  mfaAuthenticated?: boolean | undefined;
}
export interface SessionIssuer {
  accountId?: string | undefined;
  arn?: string | undefined;
  principalId?: string | undefined;
  type?: string | undefined;
  userName?: string | undefined;
}
export interface SessionContext {
  attributes?: SessionContextAttributes | undefined;
  sessionIssuer?: SessionIssuer | undefined;
}
export interface AssumedRole {
  accessKeyId?: string | undefined;
  accountId?: string | undefined;
  arn?: string | undefined;
  principalId?: string | undefined;
  sessionContext?: SessionContext | undefined;
}
export interface AwsAccount {
  accountId?: string | undefined;
  principalId?: string | undefined;
}
export interface AwsService {
  invokedBy?: string | undefined;
}
export interface FederatedUser {
  accessKeyId?: string | undefined;
  accountId?: string | undefined;
  arn?: string | undefined;
  principalId?: string | undefined;
  sessionContext?: SessionContext | undefined;
}
export interface IamUser {
  accountId?: string | undefined;
  arn?: string | undefined;
  principalId?: string | undefined;
  userName?: string | undefined;
}
export interface UserIdentityRoot {
  accountId?: string | undefined;
  arn?: string | undefined;
  principalId?: string | undefined;
}
export declare const UserIdentityType: {
  readonly AWSAccount: "AWSAccount";
  readonly AWSService: "AWSService";
  readonly AssumedRole: "AssumedRole";
  readonly FederatedUser: "FederatedUser";
  readonly IAMUser: "IAMUser";
  readonly Root: "Root";
};
export type UserIdentityType =
  (typeof UserIdentityType)[keyof typeof UserIdentityType];
export interface UserIdentity {
  assumedRole?: AssumedRole | undefined;
  awsAccount?: AwsAccount | undefined;
  awsService?: AwsService | undefined;
  federatedUser?: FederatedUser | undefined;
  iamUser?: IamUser | undefined;
  root?: UserIdentityRoot | undefined;
  type?: UserIdentityType | undefined;
}
export interface FindingActor {
  domainDetails?: DomainDetails | undefined;
  ipAddressDetails?: IpAddressDetails | undefined;
  userIdentity?: UserIdentity | undefined;
}
export interface PolicyDetails {
  action?: FindingAction | undefined;
  actor?: FindingActor | undefined;
}
export declare const EncryptionType: {
  readonly AES256: "AES256";
  readonly NONE: "NONE";
  readonly UNKNOWN: "UNKNOWN";
  readonly aws_kms: "aws:kms";
  readonly aws_kms_dsse: "aws:kms:dsse";
};
export type EncryptionType =
  (typeof EncryptionType)[keyof typeof EncryptionType];
export interface ServerSideEncryption {
  encryptionType?: EncryptionType | undefined;
  kmsMasterKeyId?: string | undefined;
}
export interface S3BucketOwner {
  displayName?: string | undefined;
  id?: string | undefined;
}
export interface S3Bucket {
  allowsUnencryptedObjectUploads?: AllowsUnencryptedObjectUploads | undefined;
  arn?: string | undefined;
  createdAt?: Date | undefined;
  defaultServerSideEncryption?: ServerSideEncryption | undefined;
  name?: string | undefined;
  owner?: S3BucketOwner | undefined;
  publicAccess?: BucketPublicAccess | undefined;
  tags?: KeyValuePair[] | undefined;
}
export declare const StorageClass: {
  readonly DEEP_ARCHIVE: "DEEP_ARCHIVE";
  readonly GLACIER: "GLACIER";
  readonly GLACIER_IR: "GLACIER_IR";
  readonly INTELLIGENT_TIERING: "INTELLIGENT_TIERING";
  readonly ONEZONE_IA: "ONEZONE_IA";
  readonly OUTPOSTS: "OUTPOSTS";
  readonly REDUCED_REDUNDANCY: "REDUCED_REDUNDANCY";
  readonly STANDARD: "STANDARD";
  readonly STANDARD_IA: "STANDARD_IA";
};
export type StorageClass = (typeof StorageClass)[keyof typeof StorageClass];
export interface S3Object {
  bucketArn?: string | undefined;
  eTag?: string | undefined;
  extension?: string | undefined;
  key?: string | undefined;
  lastModified?: Date | undefined;
  path?: string | undefined;
  publicAccess?: boolean | undefined;
  serverSideEncryption?: ServerSideEncryption | undefined;
  size?: number | undefined;
  storageClass?: StorageClass | undefined;
  tags?: KeyValuePair[] | undefined;
  versionId?: string | undefined;
}
export interface ResourcesAffected {
  s3Bucket?: S3Bucket | undefined;
  s3Object?: S3Object | undefined;
}
export declare const SeverityDescription: {
  readonly High: "High";
  readonly Low: "Low";
  readonly Medium: "Medium";
};
export type SeverityDescription =
  (typeof SeverityDescription)[keyof typeof SeverityDescription];
export interface Severity {
  description?: SeverityDescription | undefined;
  score?: number | undefined;
}
export declare const FindingType: {
  readonly Policy_IAMUser_S3BlockPublicAccessDisabled: "Policy:IAMUser/S3BlockPublicAccessDisabled";
  readonly Policy_IAMUser_S3BucketEncryptionDisabled: "Policy:IAMUser/S3BucketEncryptionDisabled";
  readonly Policy_IAMUser_S3BucketPublic: "Policy:IAMUser/S3BucketPublic";
  readonly Policy_IAMUser_S3BucketReplicatedExternally: "Policy:IAMUser/S3BucketReplicatedExternally";
  readonly Policy_IAMUser_S3BucketSharedExternally: "Policy:IAMUser/S3BucketSharedExternally";
  readonly Policy_IAMUser_S3BucketSharedWithCloudFront: "Policy:IAMUser/S3BucketSharedWithCloudFront";
  readonly SensitiveData_S3Object_Credentials: "SensitiveData:S3Object/Credentials";
  readonly SensitiveData_S3Object_CustomIdentifier: "SensitiveData:S3Object/CustomIdentifier";
  readonly SensitiveData_S3Object_Financial: "SensitiveData:S3Object/Financial";
  readonly SensitiveData_S3Object_Multiple: "SensitiveData:S3Object/Multiple";
  readonly SensitiveData_S3Object_Personal: "SensitiveData:S3Object/Personal";
};
export type FindingType = (typeof FindingType)[keyof typeof FindingType];
export interface Finding {
  accountId?: string | undefined;
  archived?: boolean | undefined;
  category?: FindingCategory | undefined;
  classificationDetails?: ClassificationDetails | undefined;
  count?: number | undefined;
  createdAt?: Date | undefined;
  description?: string | undefined;
  id?: string | undefined;
  partition?: string | undefined;
  policyDetails?: PolicyDetails | undefined;
  region?: string | undefined;
  resourcesAffected?: ResourcesAffected | undefined;
  sample?: boolean | undefined;
  schemaVersion?: string | undefined;
  severity?: Severity | undefined;
  title?: string | undefined;
  type?: FindingType | undefined;
  updatedAt?: Date | undefined;
}
export declare const FindingsFilterAction: {
  readonly ARCHIVE: "ARCHIVE";
  readonly NOOP: "NOOP";
};
export type FindingsFilterAction =
  (typeof FindingsFilterAction)[keyof typeof FindingsFilterAction];
export interface FindingsFilterListItem {
  action?: FindingsFilterAction | undefined;
  arn?: string | undefined;
  id?: string | undefined;
  name?: string | undefined;
  tags?: Record<string, string> | undefined;
}
export interface GroupCount {
  count?: number | undefined;
  groupKey?: string | undefined;
}
export declare const RelationshipStatus: {
  readonly AccountSuspended: "AccountSuspended";
  readonly Created: "Created";
  readonly EmailVerificationFailed: "EmailVerificationFailed";
  readonly EmailVerificationInProgress: "EmailVerificationInProgress";
  readonly Enabled: "Enabled";
  readonly Invited: "Invited";
  readonly Paused: "Paused";
  readonly RegionDisabled: "RegionDisabled";
  readonly Removed: "Removed";
  readonly Resigned: "Resigned";
};
export type RelationshipStatus =
  (typeof RelationshipStatus)[keyof typeof RelationshipStatus];
export interface Invitation {
  accountId?: string | undefined;
  invitationId?: string | undefined;
  invitedAt?: Date | undefined;
  relationshipStatus?: RelationshipStatus | undefined;
}
export declare const ScopeFilterKey: {
  readonly OBJECT_EXTENSION: "OBJECT_EXTENSION";
  readonly OBJECT_KEY: "OBJECT_KEY";
  readonly OBJECT_LAST_MODIFIED_DATE: "OBJECT_LAST_MODIFIED_DATE";
  readonly OBJECT_SIZE: "OBJECT_SIZE";
};
export type ScopeFilterKey =
  (typeof ScopeFilterKey)[keyof typeof ScopeFilterKey];
export interface SimpleScopeTerm {
  comparator?: JobComparator | undefined;
  key?: ScopeFilterKey | undefined;
  values?: string[] | undefined;
}
export interface TagValuePair {
  key?: string | undefined;
  value?: string | undefined;
}
export declare const TagTarget: {
  readonly S3_OBJECT: "S3_OBJECT";
};
export type TagTarget = (typeof TagTarget)[keyof typeof TagTarget];
export interface TagScopeTerm {
  comparator?: JobComparator | undefined;
  key?: string | undefined;
  tagValues?: TagValuePair[] | undefined;
  target?: TagTarget | undefined;
}
export interface JobScopeTerm {
  simpleScopeTerm?: SimpleScopeTerm | undefined;
  tagScopeTerm?: TagScopeTerm | undefined;
}
export interface CriteriaBlockForJob {
  and?: CriteriaForJob[] | undefined;
}
export interface S3BucketCriteriaForJob {
  excludes?: CriteriaBlockForJob | undefined;
  includes?: CriteriaBlockForJob | undefined;
}
export interface S3BucketDefinitionForJob {
  accountId: string | undefined;
  buckets: string[] | undefined;
}
export declare const JobStatus: {
  readonly CANCELLED: "CANCELLED";
  readonly COMPLETE: "COMPLETE";
  readonly IDLE: "IDLE";
  readonly PAUSED: "PAUSED";
  readonly RUNNING: "RUNNING";
  readonly USER_PAUSED: "USER_PAUSED";
};
export type JobStatus = (typeof JobStatus)[keyof typeof JobStatus];
export declare const JobType: {
  readonly ONE_TIME: "ONE_TIME";
  readonly SCHEDULED: "SCHEDULED";
};
export type JobType = (typeof JobType)[keyof typeof JobType];
export declare const LastRunErrorStatusCode: {
  readonly ERROR: "ERROR";
  readonly NONE: "NONE";
};
export type LastRunErrorStatusCode =
  (typeof LastRunErrorStatusCode)[keyof typeof LastRunErrorStatusCode];
export interface LastRunErrorStatus {
  code?: LastRunErrorStatusCode | undefined;
}
export interface UserPausedDetails {
  jobExpiresAt?: Date | undefined;
  jobImminentExpirationHealthEventArn?: string | undefined;
  jobPausedAt?: Date | undefined;
}
export interface JobSummary {
  bucketCriteria?: S3BucketCriteriaForJob | undefined;
  bucketDefinitions?: S3BucketDefinitionForJob[] | undefined;
  createdAt?: Date | undefined;
  jobId?: string | undefined;
  jobStatus?: JobStatus | undefined;
  jobType?: JobType | undefined;
  lastRunErrorStatus?: LastRunErrorStatus | undefined;
  name?: string | undefined;
  userPausedDetails?: UserPausedDetails | undefined;
}
export declare const ListJobsFilterKey: {
  readonly createdAt: "createdAt";
  readonly jobStatus: "jobStatus";
  readonly jobType: "jobType";
  readonly name: "name";
};
export type ListJobsFilterKey =
  (typeof ListJobsFilterKey)[keyof typeof ListJobsFilterKey];
export interface ListJobsFilterTerm {
  comparator?: JobComparator | undefined;
  key?: ListJobsFilterKey | undefined;
  values?: string[] | undefined;
}
export interface ManagedDataIdentifierSummary {
  category?: SensitiveDataItemCategory | undefined;
  id?: string | undefined;
}
export interface MatchingBucket {
  accountId?: string | undefined;
  automatedDiscoveryMonitoringStatus?:
    | AutomatedDiscoveryMonitoringStatus
    | undefined;
  bucketName?: string | undefined;
  classifiableObjectCount?: number | undefined;
  classifiableSizeInBytes?: number | undefined;
  errorCode?: BucketMetadataErrorCode | undefined;
  errorMessage?: string | undefined;
  jobDetails?: JobDetails | undefined;
  lastAutomatedDiscoveryTime?: Date | undefined;
  objectCount?: number | undefined;
  objectCountByEncryptionType?: ObjectCountByEncryptionType | undefined;
  sensitivityScore?: number | undefined;
  sizeInBytes?: number | undefined;
  sizeInBytesCompressed?: number | undefined;
  unclassifiableObjectCount?: ObjectLevelStatistics | undefined;
  unclassifiableObjectSizeInBytes?: ObjectLevelStatistics | undefined;
}
export interface MatchingResource {
  matchingBucket?: MatchingBucket | undefined;
}
export interface Member {
  accountId?: string | undefined;
  administratorAccountId?: string | undefined;
  arn?: string | undefined;
  email?: string | undefined;
  invitedAt?: Date | undefined;
  masterAccountId?: string | undefined;
  relationshipStatus?: RelationshipStatus | undefined;
  tags?: Record<string, string> | undefined;
  updatedAt?: Date | undefined;
}
export interface ResourceProfileArtifact {
  arn: string | undefined;
  classificationResultStatus: string | undefined;
  sensitive?: boolean | undefined;
}
export declare const SearchResourcesComparator: {
  readonly EQ: "EQ";
  readonly NE: "NE";
};
export type SearchResourcesComparator =
  (typeof SearchResourcesComparator)[keyof typeof SearchResourcesComparator];
export declare const SearchResourcesSimpleCriterionKey: {
  readonly ACCOUNT_ID: "ACCOUNT_ID";
  readonly AUTOMATED_DISCOVERY_MONITORING_STATUS: "AUTOMATED_DISCOVERY_MONITORING_STATUS";
  readonly S3_BUCKET_EFFECTIVE_PERMISSION: "S3_BUCKET_EFFECTIVE_PERMISSION";
  readonly S3_BUCKET_NAME: "S3_BUCKET_NAME";
  readonly S3_BUCKET_SHARED_ACCESS: "S3_BUCKET_SHARED_ACCESS";
};
export type SearchResourcesSimpleCriterionKey =
  (typeof SearchResourcesSimpleCriterionKey)[keyof typeof SearchResourcesSimpleCriterionKey];
export interface SearchResourcesSimpleCriterion {
  comparator?: SearchResourcesComparator | undefined;
  key?: SearchResourcesSimpleCriterionKey | undefined;
  values?: string[] | undefined;
}
export interface SearchResourcesTagCriterionPair {
  key?: string | undefined;
  value?: string | undefined;
}
export interface SearchResourcesTagCriterion {
  comparator?: SearchResourcesComparator | undefined;
  tagValues?: SearchResourcesTagCriterionPair[] | undefined;
}
export interface SearchResourcesCriteria {
  simpleCriterion?: SearchResourcesSimpleCriterion | undefined;
  tagCriterion?: SearchResourcesTagCriterion | undefined;
}
export interface SensitivityInspectionTemplatesEntry {
  id?: string | undefined;
  name?: string | undefined;
}
export interface SuppressDataIdentifier {
  id?: string | undefined;
  type?: DataIdentifierType | undefined;
}
export declare const UnavailabilityReasonCode: {
  readonly ACCOUNT_NOT_IN_ORGANIZATION: "ACCOUNT_NOT_IN_ORGANIZATION";
  readonly INVALID_CLASSIFICATION_RESULT: "INVALID_CLASSIFICATION_RESULT";
  readonly INVALID_RESULT_SIGNATURE: "INVALID_RESULT_SIGNATURE";
  readonly MEMBER_ROLE_TOO_PERMISSIVE: "MEMBER_ROLE_TOO_PERMISSIVE";
  readonly MISSING_GET_MEMBER_PERMISSION: "MISSING_GET_MEMBER_PERMISSION";
  readonly OBJECT_EXCEEDS_SIZE_QUOTA: "OBJECT_EXCEEDS_SIZE_QUOTA";
  readonly OBJECT_UNAVAILABLE: "OBJECT_UNAVAILABLE";
  readonly RESULT_NOT_SIGNED: "RESULT_NOT_SIGNED";
  readonly ROLE_TOO_PERMISSIVE: "ROLE_TOO_PERMISSIVE";
  readonly UNSUPPORTED_FINDING_TYPE: "UNSUPPORTED_FINDING_TYPE";
  readonly UNSUPPORTED_OBJECT_TYPE: "UNSUPPORTED_OBJECT_TYPE";
};
export type UnavailabilityReasonCode =
  (typeof UnavailabilityReasonCode)[keyof typeof UnavailabilityReasonCode];
export declare const ErrorCode: {
  readonly ClientError: "ClientError";
  readonly InternalError: "InternalError";
};
export type ErrorCode = (typeof ErrorCode)[keyof typeof ErrorCode];
export interface UnprocessedAccount {
  accountId?: string | undefined;
  errorCode?: ErrorCode | undefined;
  errorMessage?: string | undefined;
}
export declare const Currency: {
  readonly USD: "USD";
};
export type Currency = (typeof Currency)[keyof typeof Currency];
export declare const Unit: {
  readonly TERABYTES: "TERABYTES";
};
export type Unit = (typeof Unit)[keyof typeof Unit];
export interface ServiceLimit {
  isServiceLimited?: boolean | undefined;
  unit?: Unit | undefined;
  value?: number | undefined;
}
export declare const UsageType: {
  readonly AUTOMATED_OBJECT_MONITORING: "AUTOMATED_OBJECT_MONITORING";
  readonly AUTOMATED_SENSITIVE_DATA_DISCOVERY: "AUTOMATED_SENSITIVE_DATA_DISCOVERY";
  readonly DATA_INVENTORY_EVALUATION: "DATA_INVENTORY_EVALUATION";
  readonly SENSITIVE_DATA_DISCOVERY: "SENSITIVE_DATA_DISCOVERY";
};
export type UsageType = (typeof UsageType)[keyof typeof UsageType];
export interface UsageByAccount {
  currency?: Currency | undefined;
  estimatedCost?: string | undefined;
  serviceLimit?: ServiceLimit | undefined;
  type?: UsageType | undefined;
}
export interface UsageRecord {
  accountId?: string | undefined;
  automatedDiscoveryFreeTrialStartDate?: Date | undefined;
  freeTrialStartDate?: Date | undefined;
  usage?: UsageByAccount[] | undefined;
}
export declare const UsageStatisticsFilterComparator: {
  readonly CONTAINS: "CONTAINS";
  readonly EQ: "EQ";
  readonly GT: "GT";
  readonly GTE: "GTE";
  readonly LT: "LT";
  readonly LTE: "LTE";
  readonly NE: "NE";
};
export type UsageStatisticsFilterComparator =
  (typeof UsageStatisticsFilterComparator)[keyof typeof UsageStatisticsFilterComparator];
export declare const UsageStatisticsFilterKey: {
  readonly accountId: "accountId";
  readonly freeTrialStartDate: "freeTrialStartDate";
  readonly serviceLimit: "serviceLimit";
  readonly total: "total";
};
export type UsageStatisticsFilterKey =
  (typeof UsageStatisticsFilterKey)[keyof typeof UsageStatisticsFilterKey];
export interface UsageStatisticsFilter {
  comparator?: UsageStatisticsFilterComparator | undefined;
  key?: UsageStatisticsFilterKey | undefined;
  values?: string[] | undefined;
}
export interface UsageTotal {
  currency?: Currency | undefined;
  estimatedCost?: string | undefined;
  type?: UsageType | undefined;
}
export interface AcceptInvitationRequest {
  administratorAccountId?: string | undefined;
  invitationId: string | undefined;
  masterAccount?: string | undefined;
}
export interface AcceptInvitationResponse {}
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ServiceQuotaExceededException extends __BaseException {
  readonly name: "ServiceQuotaExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export interface AccountDetail {
  accountId: string | undefined;
  email: string | undefined;
}
export interface S3WordsList {
  bucketName: string | undefined;
  objectKey: string | undefined;
}
export interface AllowListCriteria {
  regex?: string | undefined;
  s3WordsList?: S3WordsList | undefined;
}
export declare const AllowListStatusCode: {
  readonly OK: "OK";
  readonly S3_OBJECT_ACCESS_DENIED: "S3_OBJECT_ACCESS_DENIED";
  readonly S3_OBJECT_EMPTY: "S3_OBJECT_EMPTY";
  readonly S3_OBJECT_NOT_FOUND: "S3_OBJECT_NOT_FOUND";
  readonly S3_OBJECT_OVERSIZE: "S3_OBJECT_OVERSIZE";
  readonly S3_THROTTLED: "S3_THROTTLED";
  readonly S3_USER_ACCESS_DENIED: "S3_USER_ACCESS_DENIED";
  readonly UNKNOWN_ERROR: "UNKNOWN_ERROR";
};
export type AllowListStatusCode =
  (typeof AllowListStatusCode)[keyof typeof AllowListStatusCode];
export interface AllowListStatus {
  code: AllowListStatusCode | undefined;
  description?: string | undefined;
}
export declare const AutoEnableMode: {
  readonly ALL: "ALL";
  readonly NEW: "NEW";
  readonly NONE: "NONE";
};
export type AutoEnableMode =
  (typeof AutoEnableMode)[keyof typeof AutoEnableMode];
export declare const AutomatedDiscoveryStatus: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type AutomatedDiscoveryStatus =
  (typeof AutomatedDiscoveryStatus)[keyof typeof AutomatedDiscoveryStatus];
export declare const AvailabilityCode: {
  readonly AVAILABLE: "AVAILABLE";
  readonly UNAVAILABLE: "UNAVAILABLE";
};
export type AvailabilityCode =
  (typeof AvailabilityCode)[keyof typeof AvailabilityCode];
export interface BatchGetCustomDataIdentifiersRequest {
  ids?: string[] | undefined;
}
export interface BatchGetCustomDataIdentifiersResponse {
  customDataIdentifiers?: BatchGetCustomDataIdentifierSummary[] | undefined;
  notFoundIdentifierIds?: string[] | undefined;
}
export interface BatchUpdateAutomatedDiscoveryAccountsRequest {
  accounts?: AutomatedDiscoveryAccountUpdate[] | undefined;
}
export interface BatchUpdateAutomatedDiscoveryAccountsResponse {
  errors?: AutomatedDiscoveryAccountUpdateError[] | undefined;
}
export interface BucketCountByEffectivePermission {
  publiclyAccessible?: number | undefined;
  publiclyReadable?: number | undefined;
  publiclyWritable?: number | undefined;
  unknown?: number | undefined;
}
export interface BucketCountByEncryptionType {
  kmsManaged?: number | undefined;
  s3Managed?: number | undefined;
  unencrypted?: number | undefined;
  unknown?: number | undefined;
}
export interface BucketCountBySharedAccessType {
  external?: number | undefined;
  internal?: number | undefined;
  notShared?: number | undefined;
  unknown?: number | undefined;
}
export interface BucketCountPolicyAllowsUnencryptedObjectUploads {
  allowsUnencryptedObjectUploads?: number | undefined;
  deniesUnencryptedObjectUploads?: number | undefined;
  unknown?: number | undefined;
}
export interface BucketCriteriaAdditionalProperties {
  eq?: string[] | undefined;
  gt?: number | undefined;
  gte?: number | undefined;
  lt?: number | undefined;
  lte?: number | undefined;
  neq?: string[] | undefined;
  prefix?: string | undefined;
}
export declare const OrderBy: {
  readonly ASC: "ASC";
  readonly DESC: "DESC";
};
export type OrderBy = (typeof OrderBy)[keyof typeof OrderBy];
export interface BucketSortCriteria {
  attributeName?: string | undefined;
  orderBy?: OrderBy | undefined;
}
export interface SensitivityAggregations {
  classifiableSizeInBytes?: number | undefined;
  publiclyAccessibleCount?: number | undefined;
  totalCount?: number | undefined;
  totalSizeInBytes?: number | undefined;
}
export interface BucketStatisticsBySensitivity {
  classificationError?: SensitivityAggregations | undefined;
  notClassified?: SensitivityAggregations | undefined;
  notSensitive?: SensitivityAggregations | undefined;
  sensitive?: SensitivityAggregations | undefined;
}
export interface S3Destination {
  bucketName: string | undefined;
  keyPrefix?: string | undefined;
  kmsKeyArn: string | undefined;
}
export interface ClassificationExportConfiguration {
  s3Destination?: S3Destination | undefined;
}
export declare const ClassificationScopeUpdateOperation: {
  readonly ADD: "ADD";
  readonly REMOVE: "REMOVE";
  readonly REPLACE: "REPLACE";
};
export type ClassificationScopeUpdateOperation =
  (typeof ClassificationScopeUpdateOperation)[keyof typeof ClassificationScopeUpdateOperation];
export interface CreateAllowListRequest {
  clientToken?: string | undefined;
  criteria: AllowListCriteria | undefined;
  description?: string | undefined;
  name: string | undefined;
  tags?: Record<string, string> | undefined;
}
export interface CreateAllowListResponse {
  arn?: string | undefined;
  id?: string | undefined;
}
export declare const ManagedDataIdentifierSelector: {
  readonly ALL: "ALL";
  readonly EXCLUDE: "EXCLUDE";
  readonly INCLUDE: "INCLUDE";
  readonly NONE: "NONE";
  readonly RECOMMENDED: "RECOMMENDED";
};
export type ManagedDataIdentifierSelector =
  (typeof ManagedDataIdentifierSelector)[keyof typeof ManagedDataIdentifierSelector];
export interface JobScopingBlock {
  and?: JobScopeTerm[] | undefined;
}
export interface Scoping {
  excludes?: JobScopingBlock | undefined;
  includes?: JobScopingBlock | undefined;
}
export interface S3JobDefinition {
  bucketCriteria?: S3BucketCriteriaForJob | undefined;
  bucketDefinitions?: S3BucketDefinitionForJob[] | undefined;
  scoping?: Scoping | undefined;
}
export interface DailySchedule {}
export interface MonthlySchedule {
  dayOfMonth?: number | undefined;
}
export declare const DayOfWeek: {
  readonly FRIDAY: "FRIDAY";
  readonly MONDAY: "MONDAY";
  readonly SATURDAY: "SATURDAY";
  readonly SUNDAY: "SUNDAY";
  readonly THURSDAY: "THURSDAY";
  readonly TUESDAY: "TUESDAY";
  readonly WEDNESDAY: "WEDNESDAY";
};
export type DayOfWeek = (typeof DayOfWeek)[keyof typeof DayOfWeek];
export interface WeeklySchedule {
  dayOfWeek?: DayOfWeek | undefined;
}
export interface JobScheduleFrequency {
  dailySchedule?: DailySchedule | undefined;
  monthlySchedule?: MonthlySchedule | undefined;
  weeklySchedule?: WeeklySchedule | undefined;
}
export interface CreateClassificationJobRequest {
  allowListIds?: string[] | undefined;
  clientToken?: string | undefined;
  customDataIdentifierIds?: string[] | undefined;
  description?: string | undefined;
  initialRun?: boolean | undefined;
  jobType: JobType | undefined;
  managedDataIdentifierIds?: string[] | undefined;
  managedDataIdentifierSelector?: ManagedDataIdentifierSelector | undefined;
  name: string | undefined;
  s3JobDefinition: S3JobDefinition | undefined;
  samplingPercentage?: number | undefined;
  scheduleFrequency?: JobScheduleFrequency | undefined;
  tags?: Record<string, string> | undefined;
}
export interface CreateClassificationJobResponse {
  jobArn?: string | undefined;
  jobId?: string | undefined;
}
export declare const DataIdentifierSeverity: {
  readonly HIGH: "HIGH";
  readonly LOW: "LOW";
  readonly MEDIUM: "MEDIUM";
};
export type DataIdentifierSeverity =
  (typeof DataIdentifierSeverity)[keyof typeof DataIdentifierSeverity];
export interface SeverityLevel {
  occurrencesThreshold: number | undefined;
  severity: DataIdentifierSeverity | undefined;
}
export interface CreateCustomDataIdentifierRequest {
  clientToken?: string | undefined;
  description?: string | undefined;
  ignoreWords?: string[] | undefined;
  keywords?: string[] | undefined;
  maximumMatchDistance?: number | undefined;
  name: string | undefined;
  regex: string | undefined;
  severityLevels?: SeverityLevel[] | undefined;
  tags?: Record<string, string> | undefined;
}
export interface CreateCustomDataIdentifierResponse {
  customDataIdentifierId?: string | undefined;
}
export interface CriterionAdditionalProperties {
  eq?: string[] | undefined;
  eqExactMatch?: string[] | undefined;
  gt?: number | undefined;
  gte?: number | undefined;
  lt?: number | undefined;
  lte?: number | undefined;
  neq?: string[] | undefined;
}
export interface FindingCriteria {
  criterion?: Record<string, CriterionAdditionalProperties> | undefined;
}
export interface CreateFindingsFilterRequest {
  action: FindingsFilterAction | undefined;
  clientToken?: string | undefined;
  description?: string | undefined;
  findingCriteria: FindingCriteria | undefined;
  name: string | undefined;
  position?: number | undefined;
  tags?: Record<string, string> | undefined;
}
export interface CreateFindingsFilterResponse {
  arn?: string | undefined;
  id?: string | undefined;
}
export interface CreateInvitationsRequest {
  accountIds: string[] | undefined;
  disableEmailNotification?: boolean | undefined;
  message?: string | undefined;
}
export interface CreateInvitationsResponse {
  unprocessedAccounts?: UnprocessedAccount[] | undefined;
}
export interface CreateMemberRequest {
  account: AccountDetail | undefined;
  tags?: Record<string, string> | undefined;
}
export interface CreateMemberResponse {
  arn?: string | undefined;
}
export interface CreateSampleFindingsRequest {
  findingTypes?: FindingType[] | undefined;
}
export interface CreateSampleFindingsResponse {}
export interface DeclineInvitationsRequest {
  accountIds: string[] | undefined;
}
export interface DeclineInvitationsResponse {
  unprocessedAccounts?: UnprocessedAccount[] | undefined;
}
export interface DeleteAllowListRequest {
  id: string | undefined;
  ignoreJobChecks?: string | undefined;
}
export interface DeleteAllowListResponse {}
export interface DeleteCustomDataIdentifierRequest {
  id: string | undefined;
}
export interface DeleteCustomDataIdentifierResponse {}
export interface DeleteFindingsFilterRequest {
  id: string | undefined;
}
export interface DeleteFindingsFilterResponse {}
export interface DeleteInvitationsRequest {
  accountIds: string[] | undefined;
}
export interface DeleteInvitationsResponse {
  unprocessedAccounts?: UnprocessedAccount[] | undefined;
}
export interface DeleteMemberRequest {
  id: string | undefined;
}
export interface DeleteMemberResponse {}
export interface DescribeBucketsRequest {
  criteria?: Record<string, BucketCriteriaAdditionalProperties> | undefined;
  maxResults?: number | undefined;
  nextToken?: string | undefined;
  sortCriteria?: BucketSortCriteria | undefined;
}
export interface DescribeBucketsResponse {
  buckets?: BucketMetadata[] | undefined;
  nextToken?: string | undefined;
}
export interface DescribeClassificationJobRequest {
  jobId: string | undefined;
}
export interface Statistics {
  approximateNumberOfObjectsToProcess?: number | undefined;
  numberOfRuns?: number | undefined;
}
export interface DescribeClassificationJobResponse {
  allowListIds?: string[] | undefined;
  clientToken?: string | undefined;
  createdAt?: Date | undefined;
  customDataIdentifierIds?: string[] | undefined;
  description?: string | undefined;
  initialRun?: boolean | undefined;
  jobArn?: string | undefined;
  jobId?: string | undefined;
  jobStatus?: JobStatus | undefined;
  jobType?: JobType | undefined;
  lastRunErrorStatus?: LastRunErrorStatus | undefined;
  lastRunTime?: Date | undefined;
  managedDataIdentifierIds?: string[] | undefined;
  managedDataIdentifierSelector?: ManagedDataIdentifierSelector | undefined;
  name?: string | undefined;
  s3JobDefinition?: S3JobDefinition | undefined;
  samplingPercentage?: number | undefined;
  scheduleFrequency?: JobScheduleFrequency | undefined;
  statistics?: Statistics | undefined;
  tags?: Record<string, string> | undefined;
  userPausedDetails?: UserPausedDetails | undefined;
}
export interface DescribeOrganizationConfigurationRequest {}
export interface DescribeOrganizationConfigurationResponse {
  autoEnable?: boolean | undefined;
  maxAccountLimitReached?: boolean | undefined;
}
export interface DisableMacieRequest {}
export interface DisableMacieResponse {}
export interface DisableOrganizationAdminAccountRequest {
  adminAccountId: string | undefined;
}
export interface DisableOrganizationAdminAccountResponse {}
export interface DisassociateFromAdministratorAccountRequest {}
export interface DisassociateFromAdministratorAccountResponse {}
export interface DisassociateFromMasterAccountRequest {}
export interface DisassociateFromMasterAccountResponse {}
export interface DisassociateMemberRequest {
  id: string | undefined;
}
export interface DisassociateMemberResponse {}
export declare const FindingPublishingFrequency: {
  readonly FIFTEEN_MINUTES: "FIFTEEN_MINUTES";
  readonly ONE_HOUR: "ONE_HOUR";
  readonly SIX_HOURS: "SIX_HOURS";
};
export type FindingPublishingFrequency =
  (typeof FindingPublishingFrequency)[keyof typeof FindingPublishingFrequency];
export declare const MacieStatus: {
  readonly ENABLED: "ENABLED";
  readonly PAUSED: "PAUSED";
};
export type MacieStatus = (typeof MacieStatus)[keyof typeof MacieStatus];
export interface EnableMacieRequest {
  clientToken?: string | undefined;
  findingPublishingFrequency?: FindingPublishingFrequency | undefined;
  status?: MacieStatus | undefined;
}
export interface EnableMacieResponse {}
export interface EnableOrganizationAdminAccountRequest {
  adminAccountId: string | undefined;
  clientToken?: string | undefined;
}
export interface EnableOrganizationAdminAccountResponse {}
export declare const FindingStatisticsSortAttributeName: {
  readonly count: "count";
  readonly groupKey: "groupKey";
};
export type FindingStatisticsSortAttributeName =
  (typeof FindingStatisticsSortAttributeName)[keyof typeof FindingStatisticsSortAttributeName];
export interface FindingStatisticsSortCriteria {
  attributeName?: FindingStatisticsSortAttributeName | undefined;
  orderBy?: OrderBy | undefined;
}
export interface GetAdministratorAccountRequest {}
export interface GetAdministratorAccountResponse {
  administrator?: Invitation | undefined;
}
export interface GetAllowListRequest {
  id: string | undefined;
}
export interface GetAllowListResponse {
  arn?: string | undefined;
  createdAt?: Date | undefined;
  criteria?: AllowListCriteria | undefined;
  description?: string | undefined;
  id?: string | undefined;
  name?: string | undefined;
  status?: AllowListStatus | undefined;
  tags?: Record<string, string> | undefined;
  updatedAt?: Date | undefined;
}
export interface GetAutomatedDiscoveryConfigurationRequest {}
export interface GetAutomatedDiscoveryConfigurationResponse {
  autoEnableOrganizationMembers?: AutoEnableMode | undefined;
  classificationScopeId?: string | undefined;
  disabledAt?: Date | undefined;
  firstEnabledAt?: Date | undefined;
  lastUpdatedAt?: Date | undefined;
  sensitivityInspectionTemplateId?: string | undefined;
  status?: AutomatedDiscoveryStatus | undefined;
}
export interface GetBucketStatisticsRequest {
  accountId?: string | undefined;
}
export interface GetBucketStatisticsResponse {
  bucketCount?: number | undefined;
  bucketCountByEffectivePermission?:
    | BucketCountByEffectivePermission
    | undefined;
  bucketCountByEncryptionType?: BucketCountByEncryptionType | undefined;
  bucketCountByObjectEncryptionRequirement?:
    | BucketCountPolicyAllowsUnencryptedObjectUploads
    | undefined;
  bucketCountBySharedAccessType?: BucketCountBySharedAccessType | undefined;
  bucketStatisticsBySensitivity?: BucketStatisticsBySensitivity | undefined;
  classifiableObjectCount?: number | undefined;
  classifiableSizeInBytes?: number | undefined;
  lastUpdated?: Date | undefined;
  objectCount?: number | undefined;
  sizeInBytes?: number | undefined;
  sizeInBytesCompressed?: number | undefined;
  unclassifiableObjectCount?: ObjectLevelStatistics | undefined;
  unclassifiableObjectSizeInBytes?: ObjectLevelStatistics | undefined;
}
export interface GetClassificationExportConfigurationRequest {}
export interface GetClassificationExportConfigurationResponse {
  configuration?: ClassificationExportConfiguration | undefined;
}
export interface GetClassificationScopeRequest {
  id: string | undefined;
}
export interface S3ClassificationScopeExclusion {
  bucketNames: string[] | undefined;
}
export interface S3ClassificationScope {
  excludes: S3ClassificationScopeExclusion | undefined;
}
export interface GetClassificationScopeResponse {
  id?: string | undefined;
  name?: string | undefined;
  s3?: S3ClassificationScope | undefined;
}
export interface GetCustomDataIdentifierRequest {
  id: string | undefined;
}
export interface GetCustomDataIdentifierResponse {
  arn?: string | undefined;
  createdAt?: Date | undefined;
  deleted?: boolean | undefined;
  description?: string | undefined;
  id?: string | undefined;
  ignoreWords?: string[] | undefined;
  keywords?: string[] | undefined;
  maximumMatchDistance?: number | undefined;
  name?: string | undefined;
  regex?: string | undefined;
  severityLevels?: SeverityLevel[] | undefined;
  tags?: Record<string, string> | undefined;
}
export interface SortCriteria {
  attributeName?: string | undefined;
  orderBy?: OrderBy | undefined;
}
export interface GetFindingsRequest {
  findingIds: string[] | undefined;
  sortCriteria?: SortCriteria | undefined;
}
export interface GetFindingsResponse {
  findings?: Finding[] | undefined;
}
export interface GetFindingsFilterRequest {
  id: string | undefined;
}
export interface GetFindingsFilterResponse {
  action?: FindingsFilterAction | undefined;
  arn?: string | undefined;
  description?: string | undefined;
  findingCriteria?: FindingCriteria | undefined;
  id?: string | undefined;
  name?: string | undefined;
  position?: number | undefined;
  tags?: Record<string, string> | undefined;
}
export interface GetFindingsPublicationConfigurationRequest {}
export interface SecurityHubConfiguration {
  publishClassificationFindings: boolean | undefined;
  publishPolicyFindings: boolean | undefined;
}
export interface GetFindingsPublicationConfigurationResponse {
  securityHubConfiguration?: SecurityHubConfiguration | undefined;
}
export declare const GroupBy: {
  readonly classificationDetails_jobId: "classificationDetails.jobId";
  readonly resourcesAffected_s3Bucket_name: "resourcesAffected.s3Bucket.name";
  readonly severity_description: "severity.description";
  readonly type: "type";
};
export type GroupBy = (typeof GroupBy)[keyof typeof GroupBy];
export interface GetFindingStatisticsRequest {
  findingCriteria?: FindingCriteria | undefined;
  groupBy: GroupBy | undefined;
  size?: number | undefined;
  sortCriteria?: FindingStatisticsSortCriteria | undefined;
}
export interface GetFindingStatisticsResponse {
  countsByGroup?: GroupCount[] | undefined;
}
export interface GetInvitationsCountRequest {}
export interface GetInvitationsCountResponse {
  invitationsCount?: number | undefined;
}
export interface GetMacieSessionRequest {}
export interface GetMacieSessionResponse {
  createdAt?: Date | undefined;
  findingPublishingFrequency?: FindingPublishingFrequency | undefined;
  serviceRole?: string | undefined;
  status?: MacieStatus | undefined;
  updatedAt?: Date | undefined;
}
export interface GetMasterAccountRequest {}
export interface GetMasterAccountResponse {
  master?: Invitation | undefined;
}
export interface GetMemberRequest {
  id: string | undefined;
}
export interface GetMemberResponse {
  accountId?: string | undefined;
  administratorAccountId?: string | undefined;
  arn?: string | undefined;
  email?: string | undefined;
  invitedAt?: Date | undefined;
  masterAccountId?: string | undefined;
  relationshipStatus?: RelationshipStatus | undefined;
  tags?: Record<string, string> | undefined;
  updatedAt?: Date | undefined;
}
export interface GetResourceProfileRequest {
  resourceArn: string | undefined;
}
export interface ResourceStatistics {
  totalBytesClassified?: number | undefined;
  totalDetections?: number | undefined;
  totalDetectionsSuppressed?: number | undefined;
  totalItemsClassified?: number | undefined;
  totalItemsSensitive?: number | undefined;
  totalItemsSkipped?: number | undefined;
  totalItemsSkippedInvalidEncryption?: number | undefined;
  totalItemsSkippedInvalidKms?: number | undefined;
  totalItemsSkippedPermissionDenied?: number | undefined;
}
export interface GetResourceProfileResponse {
  profileUpdatedAt?: Date | undefined;
  sensitivityScore?: number | undefined;
  sensitivityScoreOverridden?: boolean | undefined;
  statistics?: ResourceStatistics | undefined;
}
export interface GetRevealConfigurationRequest {}
export declare const RevealStatus: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type RevealStatus = (typeof RevealStatus)[keyof typeof RevealStatus];
export interface RevealConfiguration {
  kmsKeyId?: string | undefined;
  status: RevealStatus | undefined;
}
export declare const RetrievalMode: {
  readonly ASSUME_ROLE: "ASSUME_ROLE";
  readonly CALLER_CREDENTIALS: "CALLER_CREDENTIALS";
};
export type RetrievalMode = (typeof RetrievalMode)[keyof typeof RetrievalMode];
export interface RetrievalConfiguration {
  externalId?: string | undefined;
  retrievalMode: RetrievalMode | undefined;
  roleName?: string | undefined;
}
export interface GetRevealConfigurationResponse {
  configuration?: RevealConfiguration | undefined;
  retrievalConfiguration?: RetrievalConfiguration | undefined;
}
export interface GetSensitiveDataOccurrencesRequest {
  findingId: string | undefined;
}
export declare const RevealRequestStatus: {
  readonly ERROR: "ERROR";
  readonly PROCESSING: "PROCESSING";
  readonly SUCCESS: "SUCCESS";
};
export type RevealRequestStatus =
  (typeof RevealRequestStatus)[keyof typeof RevealRequestStatus];
export interface GetSensitiveDataOccurrencesResponse {
  error?: string | undefined;
  sensitiveDataOccurrences?: Record<string, DetectedDataDetails[]> | undefined;
  status?: RevealRequestStatus | undefined;
}
export declare class UnprocessableEntityException extends __BaseException {
  readonly name: "UnprocessableEntityException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<UnprocessableEntityException, __BaseException>
  );
}
export interface GetSensitiveDataOccurrencesAvailabilityRequest {
  findingId: string | undefined;
}
export interface GetSensitiveDataOccurrencesAvailabilityResponse {
  code?: AvailabilityCode | undefined;
  reasons?: UnavailabilityReasonCode[] | undefined;
}
export interface GetSensitivityInspectionTemplateRequest {
  id: string | undefined;
}
export interface SensitivityInspectionTemplateExcludes {
  managedDataIdentifierIds?: string[] | undefined;
}
export interface SensitivityInspectionTemplateIncludes {
  allowListIds?: string[] | undefined;
  customDataIdentifierIds?: string[] | undefined;
  managedDataIdentifierIds?: string[] | undefined;
}
export interface GetSensitivityInspectionTemplateResponse {
  description?: string | undefined;
  excludes?: SensitivityInspectionTemplateExcludes | undefined;
  includes?: SensitivityInspectionTemplateIncludes | undefined;
  name?: string | undefined;
  sensitivityInspectionTemplateId?: string | undefined;
}
export declare const UsageStatisticsSortKey: {
  readonly accountId: "accountId";
  readonly freeTrialStartDate: "freeTrialStartDate";
  readonly serviceLimitValue: "serviceLimitValue";
  readonly total: "total";
};
export type UsageStatisticsSortKey =
  (typeof UsageStatisticsSortKey)[keyof typeof UsageStatisticsSortKey];
export interface UsageStatisticsSortBy {
  key?: UsageStatisticsSortKey | undefined;
  orderBy?: OrderBy | undefined;
}
export declare const TimeRange: {
  readonly MONTH_TO_DATE: "MONTH_TO_DATE";
  readonly PAST_30_DAYS: "PAST_30_DAYS";
};
export type TimeRange = (typeof TimeRange)[keyof typeof TimeRange];
export interface GetUsageStatisticsRequest {
  filterBy?: UsageStatisticsFilter[] | undefined;
  maxResults?: number | undefined;
  nextToken?: string | undefined;
  sortBy?: UsageStatisticsSortBy | undefined;
  timeRange?: TimeRange | undefined;
}
export interface GetUsageStatisticsResponse {
  nextToken?: string | undefined;
  records?: UsageRecord[] | undefined;
  timeRange?: TimeRange | undefined;
}
export interface GetUsageTotalsRequest {
  timeRange?: string | undefined;
}
export interface GetUsageTotalsResponse {
  timeRange?: TimeRange | undefined;
  usageTotals?: UsageTotal[] | undefined;
}
export interface ListAllowListsRequest {
  maxResults?: number | undefined;
  nextToken?: string | undefined;
}
export interface ListAllowListsResponse {
  allowLists?: AllowListSummary[] | undefined;
  nextToken?: string | undefined;
}
export interface ListAutomatedDiscoveryAccountsRequest {
  accountIds?: string[] | undefined;
  maxResults?: number | undefined;
  nextToken?: string | undefined;
}
export interface ListAutomatedDiscoveryAccountsResponse {
  items?: AutomatedDiscoveryAccount[] | undefined;
  nextToken?: string | undefined;
}
