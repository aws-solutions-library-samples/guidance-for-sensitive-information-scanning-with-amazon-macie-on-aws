"use strict";
/**
 *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance
 *  with the License. A copy of the License is located at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES
 *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions
 *  and limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DefaultSagemakerNotebookProps = DefaultSagemakerNotebookProps;
exports.DefaultSagemakerModelProps = DefaultSagemakerModelProps;
exports.DefaultSagemakerEndpointConfigProps = DefaultSagemakerEndpointConfigProps;
exports.DefaultSagemakerEndpointProps = DefaultSagemakerEndpointProps;
/**
 * @internal This is an internal core function and should not be called directly by Solutions Constructs clients.
 */
function DefaultSagemakerNotebookProps(roleArn, kmsKeyId, subnetId, securityGroupIds) {
    return {
        instanceType: 'ml.t2.medium',
        roleArn,
        kmsKeyId,
        ...(subnetId && { subnetId, directInternetAccess: 'Disabled' }),
        ...(securityGroupIds && { securityGroupIds }),
    };
}
/**
 * @internal This is an internal core function and should not be called directly by Solutions Constructs clients.
 */
function DefaultSagemakerModelProps(executionRoleArn, primaryContainer, vpcConfig) {
    return {
        executionRoleArn,
        primaryContainer,
        ...(vpcConfig && { vpcConfig }),
    };
}
/**
 * @internal This is an internal core function and should not be called directly by Solutions Constructs clients.
 */
function DefaultSagemakerEndpointConfigProps(modelName, kmsKeyId) {
    return {
        productionVariants: [
            {
                modelName,
                initialInstanceCount: 1,
                initialVariantWeight: 1.0,
                instanceType: 'ml.m4.xlarge',
                variantName: 'AllTraffic',
            },
        ],
        ...(kmsKeyId && { kmsKeyId }),
    };
}
/**
 * @internal This is an internal core function and should not be called directly by Solutions Constructs clients.
 */
function DefaultSagemakerEndpointProps(endpointConfigName) {
    return {
        endpointConfigName,
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2FnZW1ha2VyLWRlZmF1bHRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsic2FnZW1ha2VyLWRlZmF1bHRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7Ozs7R0FXRzs7QUFrQkgsc0VBYUM7QUFLRCxnRUFVQztBQUtELGtGQWFDO0FBS0Qsc0VBSUM7QUExREQ7O0dBRUc7QUFDSCxTQUFnQiw2QkFBNkIsQ0FDM0MsT0FBZSxFQUNmLFFBQWdCLEVBQ2hCLFFBQWlCLEVBQ2pCLGdCQUEyQjtJQUUzQixPQUFPO1FBQ0wsWUFBWSxFQUFFLGNBQWM7UUFDNUIsT0FBTztRQUNQLFFBQVE7UUFDUixHQUFHLENBQUMsUUFBUSxJQUFJLEVBQUUsUUFBUSxFQUFFLG9CQUFvQixFQUFFLFVBQVUsRUFBRSxDQUFDO1FBQy9ELEdBQUcsQ0FBQyxnQkFBZ0IsSUFBSSxFQUFFLGdCQUFnQixFQUFFLENBQUM7S0FDbEIsQ0FBQztBQUNoQyxDQUFDO0FBRUQ7O0dBRUc7QUFDSCxTQUFnQiwwQkFBMEIsQ0FDeEMsZ0JBQXdCLEVBQ3hCLGdCQUFzRCxFQUN0RCxTQUFzQztJQUV0QyxPQUFPO1FBQ0wsZ0JBQWdCO1FBQ2hCLGdCQUFnQjtRQUNoQixHQUFHLENBQUMsU0FBUyxJQUFJLEVBQUUsU0FBUyxFQUFFLENBQUM7S0FDZixDQUFDO0FBQ3JCLENBQUM7QUFFRDs7R0FFRztBQUNILFNBQWdCLG1DQUFtQyxDQUFDLFNBQWlCLEVBQUUsUUFBaUI7SUFDdEYsT0FBTztRQUNMLGtCQUFrQixFQUFFO1lBQ2xCO2dCQUNFLFNBQVM7Z0JBQ1Qsb0JBQW9CLEVBQUUsQ0FBQztnQkFDdkIsb0JBQW9CLEVBQUUsR0FBRztnQkFDekIsWUFBWSxFQUFFLGNBQWM7Z0JBQzVCLFdBQVcsRUFBRSxZQUFZO2FBQzFCO1NBQ0Y7UUFDRCxHQUFHLENBQUMsUUFBUSxJQUFJLEVBQUUsUUFBUSxFQUFFLENBQUM7S0FDSixDQUFDO0FBQzlCLENBQUM7QUFFRDs7R0FFRztBQUNILFNBQWdCLDZCQUE2QixDQUFDLGtCQUEwQjtJQUN0RSxPQUFPO1FBQ0wsa0JBQWtCO0tBQ0MsQ0FBQztBQUN4QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiAgQ29weXJpZ2h0IEFtYXpvbi5jb20sIEluYy4gb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIikuIFlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2VcbiAqICB3aXRoIHRoZSBMaWNlbnNlLiBBIGNvcHkgb2YgdGhlIExpY2Vuc2UgaXMgbG9jYXRlZCBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogIG9yIGluIHRoZSAnbGljZW5zZScgZmlsZSBhY2NvbXBhbnlpbmcgdGhpcyBmaWxlLiBUaGlzIGZpbGUgaXMgZGlzdHJpYnV0ZWQgb24gYW4gJ0FTIElTJyBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTXG4gKiAgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZXhwcmVzcyBvciBpbXBsaWVkLiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnNcbiAqICBhbmQgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuLypcbiAqICBUaGUgZnVuY3Rpb25zIGZvdW5kIGhlcmUgaW4gdGhlIGNvcmUgbGlicmFyeSBhcmUgZm9yIGludGVybmFsIHVzZSBhbmQgY2FuIGJlIGNoYW5nZWRcbiAqICBvciByZW1vdmVkIG91dHNpZGUgb2YgYSBtYWpvciByZWxlYXNlLiBXZSByZWNvbW1lbmQgYWdhaW5zdCBjYWxsaW5nIHRoZW0gZGlyZWN0bHkgZnJvbSBjbGllbnQgY29kZS5cbiAqL1xuXG5pbXBvcnQge1xuICBDZm5Ob3RlYm9va0luc3RhbmNlUHJvcHMsXG4gIENmbk1vZGVsUHJvcHMsXG4gIENmbk1vZGVsLFxuICBDZm5FbmRwb2ludENvbmZpZ1Byb3BzLFxuICBDZm5FbmRwb2ludFByb3BzLFxufSBmcm9tICdhd3MtY2RrLWxpYi9hd3Mtc2FnZW1ha2VyJztcblxuLyoqXG4gKiBAaW50ZXJuYWwgVGhpcyBpcyBhbiBpbnRlcm5hbCBjb3JlIGZ1bmN0aW9uIGFuZCBzaG91bGQgbm90IGJlIGNhbGxlZCBkaXJlY3RseSBieSBTb2x1dGlvbnMgQ29uc3RydWN0cyBjbGllbnRzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gRGVmYXVsdFNhZ2VtYWtlck5vdGVib29rUHJvcHMoXG4gIHJvbGVBcm46IHN0cmluZyxcbiAga21zS2V5SWQ6IHN0cmluZyxcbiAgc3VibmV0SWQ/OiBzdHJpbmcsXG4gIHNlY3VyaXR5R3JvdXBJZHM/OiBzdHJpbmdbXVxuKTogQ2ZuTm90ZWJvb2tJbnN0YW5jZVByb3BzIHtcbiAgcmV0dXJuIHtcbiAgICBpbnN0YW5jZVR5cGU6ICdtbC50Mi5tZWRpdW0nLFxuICAgIHJvbGVBcm4sXG4gICAga21zS2V5SWQsXG4gICAgLi4uKHN1Ym5ldElkICYmIHsgc3VibmV0SWQsIGRpcmVjdEludGVybmV0QWNjZXNzOiAnRGlzYWJsZWQnIH0pLFxuICAgIC4uLihzZWN1cml0eUdyb3VwSWRzICYmIHsgc2VjdXJpdHlHcm91cElkcyB9KSxcbiAgfSBhcyBDZm5Ob3RlYm9va0luc3RhbmNlUHJvcHM7XG59XG5cbi8qKlxuICogQGludGVybmFsIFRoaXMgaXMgYW4gaW50ZXJuYWwgY29yZSBmdW5jdGlvbiBhbmQgc2hvdWxkIG5vdCBiZSBjYWxsZWQgZGlyZWN0bHkgYnkgU29sdXRpb25zIENvbnN0cnVjdHMgY2xpZW50cy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIERlZmF1bHRTYWdlbWFrZXJNb2RlbFByb3BzKFxuICBleGVjdXRpb25Sb2xlQXJuOiBzdHJpbmcsXG4gIHByaW1hcnlDb250YWluZXI6IENmbk1vZGVsLkNvbnRhaW5lckRlZmluaXRpb25Qcm9wZXJ0eSxcbiAgdnBjQ29uZmlnPzogQ2ZuTW9kZWwuVnBjQ29uZmlnUHJvcGVydHlcbik6IENmbk1vZGVsUHJvcHMge1xuICByZXR1cm4ge1xuICAgIGV4ZWN1dGlvblJvbGVBcm4sXG4gICAgcHJpbWFyeUNvbnRhaW5lcixcbiAgICAuLi4odnBjQ29uZmlnICYmIHsgdnBjQ29uZmlnIH0pLFxuICB9IGFzIENmbk1vZGVsUHJvcHM7XG59XG5cbi8qKlxuICogQGludGVybmFsIFRoaXMgaXMgYW4gaW50ZXJuYWwgY29yZSBmdW5jdGlvbiBhbmQgc2hvdWxkIG5vdCBiZSBjYWxsZWQgZGlyZWN0bHkgYnkgU29sdXRpb25zIENvbnN0cnVjdHMgY2xpZW50cy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIERlZmF1bHRTYWdlbWFrZXJFbmRwb2ludENvbmZpZ1Byb3BzKG1vZGVsTmFtZTogc3RyaW5nLCBrbXNLZXlJZD86IHN0cmluZyk6IENmbkVuZHBvaW50Q29uZmlnUHJvcHMge1xuICByZXR1cm4ge1xuICAgIHByb2R1Y3Rpb25WYXJpYW50czogW1xuICAgICAge1xuICAgICAgICBtb2RlbE5hbWUsXG4gICAgICAgIGluaXRpYWxJbnN0YW5jZUNvdW50OiAxLFxuICAgICAgICBpbml0aWFsVmFyaWFudFdlaWdodDogMS4wLFxuICAgICAgICBpbnN0YW5jZVR5cGU6ICdtbC5tNC54bGFyZ2UnLFxuICAgICAgICB2YXJpYW50TmFtZTogJ0FsbFRyYWZmaWMnLFxuICAgICAgfSxcbiAgICBdLFxuICAgIC4uLihrbXNLZXlJZCAmJiB7IGttc0tleUlkIH0pLFxuICB9IGFzIENmbkVuZHBvaW50Q29uZmlnUHJvcHM7XG59XG5cbi8qKlxuICogQGludGVybmFsIFRoaXMgaXMgYW4gaW50ZXJuYWwgY29yZSBmdW5jdGlvbiBhbmQgc2hvdWxkIG5vdCBiZSBjYWxsZWQgZGlyZWN0bHkgYnkgU29sdXRpb25zIENvbnN0cnVjdHMgY2xpZW50cy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIERlZmF1bHRTYWdlbWFrZXJFbmRwb2ludFByb3BzKGVuZHBvaW50Q29uZmlnTmFtZTogc3RyaW5nKTogQ2ZuRW5kcG9pbnRQcm9wcyB7XG4gIHJldHVybiB7XG4gICAgZW5kcG9pbnRDb25maWdOYW1lLFxuICB9IGFzIENmbkVuZHBvaW50UHJvcHM7XG59XG4iXX0=